WEBVTT

1
00:00:00.000 --> 00:00:04.966
Welcome, in this video, we're going to integrate one of the branches into master.

2
00:00:04.966 --> 00:00:09.566
I'm currently logged into GitHub, and I'm on the "website" Git repository,

3
00:00:09.566 --> 00:00:15.200
and I'm currently in the master branch. Since we created two branches fairly recently,

4
00:00:15.200 --> 00:00:18.900
the GitHub interface notices that we have recent branches,

5
00:00:18.900 --> 00:00:23.566
and it lists those two branches above the rest of the contents for my repository.

6
00:00:23.566 --> 00:00:27.233
This is such because a lot of the workflow that GitHub has

7
00:00:27.233 --> 00:00:29.700
is around comparing and pull requests.

8
00:00:29.700 --> 00:00:34.666
So, I'm going to follow that process with my first branch, which is example.

9
00:00:34.666 --> 00:00:37.866
So, I'm going to click on "Compare & pull request".

10
00:00:37.866 --> 00:00:41.266
Now, I could go into the "Pull requests" menu item over here,

11
00:00:41.266 --> 00:00:46.266
and go through the same process, but if this button appears, this is the quickest way to do it.

12
00:00:46.266 --> 00:00:50.133
By default, if there are no forks involved, which we will cover later,

13
00:00:50.133 --> 00:00:55.133
GitHub will automatically do a compare and prepare for a pull request

14
00:00:55.133 --> 00:00:59.166
based on the default branch, which in this case is master.

15
00:00:59.166 --> 00:01:03.166
At the top, we have a commit message to go along with the pull request,

16
00:01:03.166 --> 00:01:06.266
and a comment that we could start a conversation with.

17
00:01:06.266 --> 00:01:10.066
Then, at the bottom, we have a diff that shows the differences between

18
00:01:10.066 --> 00:01:12.366
where we're starting at, and were we're going to.

19
00:01:12.366 --> 00:01:17.400
So, this is the difference between the Readme file for our current branch versus master.

20
00:01:17.400 --> 00:01:20.533
We could change the view a bit by going from unified to split,

21
00:01:20.533 --> 00:01:23.700
and then we can see the changes side by side.

22
00:01:23.700 --> 00:01:27.500
We also see that we have one commit involved; one file changed;

23
00:01:27.500 --> 00:01:30.000
there are no comments currently associated with them;

24
00:01:30.000 --> 00:01:32.733
and the single contributor, which is myself.

25
00:01:32.733 --> 00:01:35.600
I'm going to go up to the comment field, and the comment field

26
00:01:35.600 --> 00:01:39.033
allows me to write in Markdown if I choose to do so.

27
00:01:39.033 --> 00:01:43.566
It's not required, but it is nice to have that quasi rich text type field.

28
00:01:43.566 --> 00:01:48.033
I have typed some text in here, into the comments field, that is in Markdown syntax.

29
00:01:48.033 --> 00:01:51.133
Double hash is a level two heading.

30
00:01:51.133 --> 00:01:56.500
This is regular text, with inline styling; so the double underscore is bolding.

31
00:01:56.500 --> 00:01:59.600
If I wanted to use italics or just emphasis,

32
00:01:59.600 --> 00:02:02.700
I could use either single underscores or just asterisks.

33
00:02:02.700 --> 00:02:06.266
If I want to see what this looks like before I submit it, I can click on preview.

34
00:02:06.266 --> 00:02:11.233
So, you can see that I have a level two heading, and the word please is bolded.

35
00:02:11.233 --> 00:02:15.600
Once I'm happy with my comment, and the rest of the pull request,

36
00:02:15.600 --> 00:02:18.200
I'm going to click on "Create pull request".

37
00:02:18.200 --> 00:02:23.000
That lands me on the main pull request page for this particular pull request.

38
00:02:23.000 --> 00:02:27.333
You can see that it has the heading that was the commit message for the pull request,

39
00:02:27.333 --> 00:02:31.133
and, for this repository, it's actually the second pull request.

40
00:02:31.133 --> 00:02:34.333
For public repos, anyone can submit a pull request;

41
00:02:34.333 --> 00:02:38.500
however, only people that have access to commit to the repository

42
00:02:38.500 --> 00:02:41.100
will have the ability to merge the pull request.

43
00:02:41.100 --> 00:02:45.466
So, when I land on this, I see that I have a button that I can merge this pull request.

44
00:02:45.466 --> 00:02:48.100
But, before we do, we can put on a different hat,

45
00:02:48.100 --> 00:02:50.666
and say that I'm the lead developer of this repository

46
00:02:50.666 --> 00:02:54.133
or, if you're the only person in the repository, then it doesn't matter;

47
00:02:54.133 --> 00:02:57.200
you're wearing all the hats. You can see that I have the conversation,

48
00:02:57.200 --> 00:03:00.933
which if you're working in a team environment would be a little bit more meaningful.

49
00:03:00.933 --> 00:03:03.900
You have the commits listed that are involved with this pull request,

50
00:03:03.900 --> 00:03:06.500
right now we only have a single commit involved,

51
00:03:06.500 --> 00:03:09.333
but if I had more commits they would be listed here.

52
00:03:09.333 --> 00:03:14.566
And then, files changed, I can see which files were changed, and what was changed.

53
00:03:14.566 --> 00:03:18.433
I can come in here and actually leave comments at the line level,

54
00:03:18.433 --> 00:03:20.633
which, for me, I'm just going to cancel for now.

55
00:03:20.633 --> 00:03:25.366
And comments at the pull request level are basically part of the conversation.

56
00:03:25.366 --> 00:03:29.600
You'll also notice that GitHub has the ability of using emoticons,

57
00:03:29.600 --> 00:03:32.833
which are accessible by starting with a colon.

58
00:03:32.833 --> 00:03:35.833
I'm going to choose "+1", and now I can preview.

59
00:03:35.833 --> 00:03:39.633
You can see that I have my heading, and I have the thumbs up icon.

60
00:03:39.633 --> 00:03:44.666
So, I'm going to click on comment, which adds my comment above.

61
00:03:44.666 --> 00:03:47.466
If I click the other button, "Close pull request",

62
00:03:47.466 --> 00:03:50.333
it would just close the pull request without merging.

63
00:03:50.333 --> 00:03:54.366
Well, until this is merged in, the changes from the example branch

64
00:03:54.366 --> 00:03:56.466
are not going to be on master.

65
00:03:56.466 --> 00:03:59.700
Thankfully, the changes within this branch are compatible

66
00:03:59.700 --> 00:04:02.100
with the base branch, which is master.

67
00:04:02.100 --> 00:04:06.400
So, we get the green check mark, and the button, "Merge pull request", is active.

68
00:04:06.400 --> 00:04:08.900
So, I'm going to go ahead and click "Merge pull request".

69
00:04:08.900 --> 00:04:11.933
I'm given the opportunity to revise the commit message,

70
00:04:11.933 --> 00:04:14.733
and now I'm going to click on "Confirm merge".

71
00:04:14.733 --> 00:04:18.366
Great, the pull request was successfully merged and closed.

72
00:04:18.366 --> 00:04:22.633
So, everything that is in example has been merged into master.

73
00:04:22.633 --> 00:04:28.133
So, we can safely delete our branch, which we can do directly from the pull request page.

74
00:04:28.133 --> 00:04:30.900
Now, the example branch has been deleted.

75
00:04:30.900 --> 00:04:34.000
Alright, let's go check it out; let's click on the name of the repository,

76
00:04:34.000 --> 00:04:36.133
that brings us back to the master branch.

77
00:04:36.133 --> 00:04:41.400
At the top, we no longer have the example branch listed, and if we do the dropdown

78
00:04:41.400 --> 00:04:45.200
for our branches, example branch is no longer listed here either.

79
00:04:45.200 --> 00:04:48.133
Also, we have a commit message that says

80
00:04:48.133 --> 00:04:53.433
"Merge pull request #2 from", our repository, slash, branch name.

81
00:04:53.433 --> 00:04:58.200
Basically, that's the commit message that you get automatically when GitHub does the merge.

82
00:04:58.200 --> 00:05:03.533
We can still review this since the "#2" is a hotlink directly to the pull request.

83
00:05:03.533 --> 00:05:07.600
It has a status of merged, but we can always review this if we wanted to.

84
00:05:07.600 --> 00:05:12.233
Let's return by clicking on the name of our repository, and let's double check our change.

85
00:05:12.233 --> 00:05:16.500
Click on the "README.md" file, and now you can see the edit that was made

86
00:05:16.500 --> 00:05:23.033
on the example branch and this edit is on the master branch.

