WEBVTT

1
00:00:00.000 --> 00:00:03.166
Welcome, in this video, we're going to look at the differences between

2
00:00:03.166 --> 00:00:07.366
SSH authentication and, specifically, HTTPs.

3
00:00:07.366 --> 00:00:11.800
We have our "demo" repository on GitHub, and we have been using HTTPs

4
00:00:11.800 --> 00:00:14.400
to authenticate in order to push changes up.

5
00:00:14.400 --> 00:00:18.500
HTTPs is perfectly fine, but there are a few drawbacks.

6
00:00:18.500 --> 00:00:21.400
For example, I'm going to go back to my terminal program,

7
00:00:21.400 --> 00:00:25.200
and I'm currently in the "demo" repository that we have locally,

8
00:00:25.200 --> 00:00:28.233
and I'm on the master branch, in a clean working directory.

9
00:00:28.233 --> 00:00:33.000
This demo repository is linked to the GitHub repository that we just set up.

10
00:00:33.000 --> 00:00:37.300
Currently, the origin repository is set up to use the HTTPs.

11
00:00:37.300 --> 00:00:40.633
So when we try to do a push, "git push origin master",

12
00:00:40.633 --> 00:00:43.866
GitHub will prompt me for my username and password.

13
00:00:43.866 --> 00:00:47.000
For private repositories, it may prompt you each time

14
00:00:47.000 --> 00:00:51.566
you need to do any network-based communication, including pulling or fetching

15
00:00:51.566 --> 00:00:54.600
or anything else that requires going back to the remote.

16
00:00:54.600 --> 00:00:58.966
For public repositories, it may only prompt you when you need to push changes up.

17
00:00:58.966 --> 00:01:01.600
Also, if you've been following along, and you weren't

18
00:01:01.600 --> 00:01:03.833
prompted for your username and password,

19
00:01:03.833 --> 00:01:06.700
it means you are on an operating system like the Mac

20
00:01:06.700 --> 00:01:11.066
that has a password manager like Keychain, and that Keychain is configured

21
00:01:11.066 --> 00:01:15.066
to keep track of your username and passwords from the terminal program.

22
00:01:15.066 --> 00:01:19.000
This is the way I have things configured now, and so I actually had to delete

23
00:01:19.000 --> 00:01:22.933
my prior configuration in order to force this to happen again.

24
00:01:22.933 --> 00:01:26.233
If you're on Windows, you may be prompted again and again

25
00:01:26.233 --> 00:01:30.333
for your username and password each time you need to communicate back to GitHub.

26
00:01:30.333 --> 00:01:34.500
This can get annoying after a while, and thus we have SSH,

27
00:01:34.500 --> 00:01:38.966
which is just as secure as HTTPs, and it's a little bit more convenient,

28
00:01:38.966 --> 00:01:43.366
since we establish a public and a private key that this machine knows about

29
00:01:43.366 --> 00:01:49.666
and is registered with GitHub as well. We're going to set that up in the next few videos.

