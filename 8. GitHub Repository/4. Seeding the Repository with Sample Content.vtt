WEBVTT

1
00:00:00.000 --> 00:00:03.733
Welcome, in this video, we're going to seed our repository

2
00:00:03.733 --> 00:00:09.233
with an initial set of files for our website. Since I have a repository named website,

3
00:00:09.233 --> 00:00:12.933
I figured I would add a bunch of files that are website related.

4
00:00:12.933 --> 00:00:17.500
To do that, I'm going to go over to my browser, and go to "initializr.com";

5
00:00:17.500 --> 00:00:20.933
and you can see how it's spelled, with the last "e" being left out.

6
00:00:20.933 --> 00:00:25.233
This website provides a quick and easy way to jump-start a website;

7
00:00:25.233 --> 00:00:29.633
it has several possible ways of getting started. I'm going to choose "Bootstrap".

8
00:00:29.633 --> 00:00:34.533
We can fine-tune that, but for now I just need a handful of files; I really don't care.

9
00:00:34.533 --> 00:00:37.033
So, I'm just going to go ahead and click "Download it!".

10
00:00:37.033 --> 00:00:41.333
After a few seconds, the initializr zip file will have finished downloading,

11
00:00:41.333 --> 00:00:44.133
so now let's click on that file. On my system,

12
00:00:44.133 --> 00:00:48.766
the Mac will automatically expand out the Zip file when you click on the file.

13
00:00:48.766 --> 00:00:52.733
So, underneath my "Downloads" folder, we have our "initializr" folder,

14
00:00:52.733 --> 00:00:55.600
with all the various contents of that folder.

15
00:00:55.600 --> 00:00:59.300
I'm going to bring all those contents into my website repository.

16
00:00:59.300 --> 00:01:03.233
So, let's return to the terminal, and I'm going to use the bash "cp" command

17
00:01:03.233 --> 00:01:09.966
to copy over all the files. The command syntax is "cp -R" for recursive;

18
00:01:09.966 --> 00:01:14.766
space; and then I preface it with "~", which references my user's home directory;

19
00:01:14.766 --> 00:01:22.866
"/Downloads/ initializr /*", which means everything under "initializr" folder; space; dot.

20
00:01:22.866 --> 00:01:27.733
That first path is the source location, and then the dot is the destination,

21
00:01:27.733 --> 00:01:32.333
which represents the current folder. Once you've done that, verify and then press enter.

22
00:01:32.333 --> 00:01:37.700
Do an "ls -l"; you should see, in addition to our initial set of files,

23
00:01:37.700 --> 00:01:43.400
that we have a new set of files and folders that came over from the "initializr" folder.

24
00:01:43.400 --> 00:01:48.633
If we do a "git status", you can see that Git notices all these files as untracked.

25
00:01:48.633 --> 00:01:52.833
To add them to the index, and to allow Git to start tracking these files,

26
00:01:52.833 --> 00:01:54.400
let's use the "git add" command.

27
00:01:54.400 --> 00:01:57.766
And, to recursively add everything in the current working folder

28
00:01:57.766 --> 00:02:01.866
I'm going to specify dot as my specification for the "add" command.

29
00:02:01.866 --> 00:02:05.166
Now, when we do a “git status”, we see a whole list of files,

30
00:02:05.166 --> 00:02:10.166
some of which are inside of folders, listed as new, which Git is now tracking.

31
00:02:10.166 --> 00:02:16.200
To move forward, let's commit: "git commit -m "Adding initial website files" ".

32
00:02:16.200 --> 00:02:19.866
Press enter, and Git responds with adding all these files.

33
00:02:19.866 --> 00:02:24.700
Let's push these files up to GitHub: type "git push"; and then the first parameter

34
00:02:24.700 --> 00:02:28.366
is the name of the remote to use which is "origin";

35
00:02:28.366 --> 00:02:32.233
space; and then the branch to push up, which is "master".

36
00:02:32.233 --> 00:02:35.133
You may have been prompted for you SSH key phrase;

37
00:02:35.133 --> 00:02:39.800
on the Mac, it's not prompting me because I have that cached in Keychain.

38
00:02:39.800 --> 00:02:43.633
There are ways to do this on Windows as well, but they're a little bit more complicated.

39
00:02:43.633 --> 00:02:45.433
Alright, so if everything went successfully,

40
00:02:45.433 --> 00:02:48.933
you should have the same results I have on my screen, which it just tells me that it

41
00:02:48.933 --> 00:02:52.166
pushed up everything from my local system up to GitHub.

42
00:02:52.166 --> 00:02:56.766
Let's go back to our browser and confirm; so now if I click on the name of my repository,

43
00:02:56.766 --> 00:03:03.733
I have all these files and folders that are now part of my Git repository on GitHub.

